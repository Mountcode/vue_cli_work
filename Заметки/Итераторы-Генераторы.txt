// Генератор объявляется со *. Достаточно добавить * к функции и написать итератор
function* some(){
	
}

// Своими словами:
// При вызове массива мы получаем его с его клю-значениями сразу, готовым, собранным, рассчитанным.
// Генератор пишется для того что бы забрать объект. С помощью итератора его пройти.  Итератор определяет как мы будем его обходить, мы сами пишем условия обхода. После получения первого значения в объекте мы переходим к сбору второго значения. Таким образом если на момент работы с первым значением второе еще было не готово то оно сможет приготовится в к моменту перехода к нему.
// Так например если мы имеем 3 функции аякса:
// 1. Взять ID пользователя
// 2. Взять почту по этому ID
// 3. Отправить эту почту далее
// То мы не станем приступать к поиску почты пока не найдем ID пользователя. Эта почта будет назначена только после выполнения п1. и так далее к 3му шагу.
// Если реализовать это не с помощью итератора то придется делать цепочку колбеков.

// Примеры
let txt = "  Всем gnbv привет! Ура ура! ";

for(let some of getWords(txt)){
	this.console.log(some);
}

function* getWords(str){
	let words = normalizeText(str).split(" ");

	for (let i = 0; i < words.length; i++){
		yield words[i]
	}
}
